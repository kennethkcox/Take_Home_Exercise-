name: 'Edge Security CD'

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'

jobs:
  deploy:
    name: 'Deploy to Production'
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC
      contents: read # Required to checkout the repo

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.2.0'

      - name: 'Configure AWS Credentials via OIDC'
        uses: aws-actions/configure-aws-credentials@v4 # Use a modern version
        with:
          role-to-assume: ${{ vars.IAM_ROLE_TO_ASSUME }} # Use a repo variable
          aws-region: ${{ vars.AWS_REGION }} # Use a repo variable

      - name: 'Terraform Init'
        id: init
        working-directory: ./terraform
        run: terraform init

      - name: 'Terraform Apply'
        id: apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: 'Get ALB DNS Name'
        id: get-alb-dns
        working-directory: ./terraform
        run: echo "alb_dns_name=$(terraform output -raw alb_dns_name)" >> $GITHUB_OUTPUT

      - name: 'Setup Python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: 'Install Dependencies'
        run: pip install requests

      - name: 'Run Smoke Test'
        run: python smoke_test.py http://${{ steps.get-alb-dns.outputs.alb_dns_name }}

      - name: 'Output Application URL'
        run: |
          echo "## ✅ Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The Juice Shop application has been deployed." >> $GITHUB_STEP_SUMMARY
          echo "You can access it at the following URL:" >> $GITHUB_STEP_SUMMARY
          echo "➡️ **http://${{ steps.get-alb-dns.outputs.alb_dns_name }}**" >> $GITHUB_STEP_SUMMARY
